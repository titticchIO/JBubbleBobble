<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.
DAJEROMADAJE</help_text>
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5894</x>
      <y>4221</y>
      <w>616</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>editor.controller::ActionListenersManager
--
+newGridButton(EditorPanel editorPanel, SpriteSelectionScrollPane selectionPane): ActionListener &lt;&lt;static&gt;&gt;
+openGridButton(LevelsPopUpMenu levelSelectionPopup, JButton openGridButton): ActionListener &lt;&lt;static&gt;&gt;
+saveLevelButton(LevelsPopUpMenu saveLevelPopup, JButton saveLevelButton): ActionListener &lt;&lt;static&gt;&gt;
+deleteLevelButton(LevelsPopUpMenu deleteLevelPopup, JButton deleteLevelButton): ActionListener &lt;&lt;static&gt;&gt;
+levelHandlers(LevelsPopUpMenu levelsPopUpMenu, String level, MenuType menuType, EditorFrame editorFrame): ActionListener &lt;&lt;static&gt;&gt;
+handleSaveLevel(LevelsPopUpMenu lvlPopMen, int newLevelNumber, EditorFrame editorFrame): ActionListener &lt;&lt;static&gt;&gt;
+addSelectionButton(SpriteSelectionScrollPane spriteSelectionScrollPane, SelectionButton b): ActionListener &lt;&lt;static&gt;&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6097</x>
      <y>3983</y>
      <w>266</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>editor.model::LevelManager
--
+LEVELS_REL_PATH = "resources/levels": String &lt;&lt;static&gt;&gt;
+ROWS = 24: int &lt;&lt;static&gt;&gt;
+COLS = 30: int &lt;&lt;static&gt;&gt;
-level: char[][] &lt;&lt;static&gt;&gt;
--
+LevelManager(): ctor
+getLevels(): List&lt;String&gt; &lt;&lt;static&gt;&gt;
+setLevel(char[][] levelData): void &lt;&lt;static&gt;&gt;
+emptyLevel(): void &lt;&lt;static&gt;&gt;
+setTile(int y, int x, char tile): void &lt;&lt;static&gt;&gt;
-matriceToString(): String &lt;&lt;static&gt;&gt;
+saveLevelFile(int levelNum): void &lt;&lt;static&gt;&gt;
+deleteLevelFile(int levelNum): void &lt;&lt;static&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6937</x>
      <y>3738</y>
      <w>273</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>editor.view::EditorFrame
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
+instance: EditorFrame &lt;&lt;static&gt;&gt;
-editorPanel: EditorPanel
-saveLevelButton: JButton
-actualLevel: JLabel
-actualLevelNumber: String
-popUps: List&lt;LevelsPopUpMenu&gt;
--
-EditorFrame(): ctor
+getInstance(): EditorFrame &lt;&lt;static&gt;&gt;
+getEditorPanel(): EditorPanel
+setEditorPanel(EditorPanel editorPanel): void
+getActualLevelNumber(): String
+setActualLevelNumber(String actualLevelNumber): void
+getActualLevel(): JLabel
+setActualLevel(JLabel actualLevel): void
+getPopUps(): List&lt;LevelsPopUpMenu&gt;
+resetEditor(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6916</x>
      <y>3997</y>
      <w>308</w>
      <h>266</h>
    </coordinates>
    <panel_attributes>editor.view::EditorPanel
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
+ROWS = 24: int &lt;&lt;static&gt;&gt;
+COLS = 30: int &lt;&lt;static&gt;&gt;
+DEFAULT_SQUARE_SIZE = 20: int &lt;&lt;static&gt;&gt;
+SCALE = 1: float &lt;&lt;static&gt;&gt;
+SQUARE_SIZE = (int) (DEFAULT_SQUARE_SIZE * SCALE): int &lt;&lt;static&gt;&gt;
+PANEL_WIDTH = SQUARE_SIZE * COLS: int &lt;&lt;static&gt;&gt;
+PANEL_HEIGHT = SQUARE_SIZE * ROWS: int &lt;&lt;static&gt;&gt;
-sprites: Sprite[][]
-selectionPane: SpriteSelectionScrollPane
-isMousePressed: boolean
--
+EditorPanel(EditorFrame ef, SpriteSelectionScrollPane selPane): ctor
-initializeGrid(): void
#paintComponent(Graphics g): void
-setSize(): void
+loadLevel(char[][] levelData): void
+reset(): void
+getSprites(): Sprite[][]
+getSelectionPane(): SpriteSelectionScrollPane
-updateSprite(Sprite sprite, int x, int y): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6531</x>
      <y>3997</y>
      <w>350</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>editor.view::LevelsPopUpMenu
--
+serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-menuType: MenuType
-editorFrame: EditorFrame
--
+LevelsPopUpMenu(MenuType menuType, EditorFrame editorFrame): ctor
-rebuildMenu(): void
+handleOpenLevel(int levelNumber, EditorFrame editorFrame): void
+handleSaveLevel(int levelNumber, EditorFrame editorFrame): void
+handleDeleteLevel(int levelNumber, EditorFrame editorFrame): void
-saveLevelImage(int levelNumber, EditorFrame editorFrame): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7315</x>
      <y>4284</y>
      <w>259</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>editor.view::SelectionButton
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-img: BufferedImage
-code: char
--
+SelectionButton(BufferedImage img, char code): ctor
+getImg(): BufferedImage
+getCode(): char
+hashCode(): int
+equals(Object obj): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6958</x>
      <y>4361</y>
      <w>196</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>editor.view::Sprite
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-x: int
-y: int
-sideLength: float
-spriteImg: BufferedImage
--
+Sprite(int x, int y, float sideLength): ctor
+getX(): int
+getY(): int
+getSideLength(): float
+getSpriteImg(): BufferedImage
+updateSpriteImg(BufferedImage img): void
+render(Graphics g): void
+renderWithoutBorder(Graphics g): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7245</x>
      <y>3997</y>
      <w>357</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>editor.view::SpriteSelectionScrollPane
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-blocks: List&lt;SelectionButton&gt;
-enemies: List&lt;SelectionButton&gt;
-players: List&lt;SelectionButton&gt;
-others: List&lt;SelectionButton&gt;
-selectedButton: SelectionButton
--
+SpriteSelectionScrollPane(): ctor
-addCategory(JPanel panel, String title, List&lt;SelectionButton&gt; buttons): void
-addBlocks(): void
-addEnemies(): void
-addPlayers(): void
-setSize(): void
+deselectAllButtons(): void
+getCurrentButton(): SelectionButton
+setCurrentButton(SelectionButton selectedButton): void
#paintComponent(Graphics g): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>5887</x>
      <y>4200</y>
      <w>630</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>editor.controller
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>6090</x>
      <y>3962</y>
      <w>294</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>editor.model
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>6524</x>
      <y>3710</y>
      <w>1092</w>
      <h>833</h>
    </coordinates>
    <panel_attributes>editor.view
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5663</x>
      <y>3122</y>
      <w>483</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>game.controller::ActionListenersManager
--
+setCurrentUser(User user): ActionListener &lt;&lt;static&gt;&gt;
+startEditor(): ActionListener &lt;&lt;static&gt;&gt;
+showLeaderboard(): ActionListener &lt;&lt;static&gt;&gt;
+showUserSelection(JPopupMenu userSelectionPopUp, JButton userSelectionButton): ActionListener &lt;&lt;static&gt;&gt;
+updateUserSelection(User user, JPopupMenu userSelectionPopUp): ActionListener &lt;&lt;static&gt;&gt;
+showNewUserDialog(): ActionListener &lt;&lt;static&gt;&gt;
+chooseAvatar(JLabel avatarPreviewLabel, JButton chooseAvatarButton): ActionListener &lt;&lt;static&gt;&gt;
+resumeGame(Controller controller): ActionListener &lt;&lt;static&gt;&gt;
+backToMenu(Controller controller): ActionListener &lt;&lt;static&gt;&gt;
+enableCheats(): ActionListener &lt;&lt;static&gt;&gt;
+enableInvincibility(JToggleButton button): ItemListener &lt;&lt;static&gt;&gt;
+skipLevel(): ActionListener &lt;&lt;static&gt;&gt;
+spawnSpecialBubble(String bubbleType): ActionListener &lt;&lt;static&gt;&gt;
+spawnRandomPowerup(): ActionListener &lt;&lt;static&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5439</x>
      <y>3213</y>
      <w>217</w>
      <h>301</h>
    </coordinates>
    <panel_attributes>game.controller::Controller
--
-gameThread: Thread
-running: boolean
-GAME_SPEED = 1.0f: float
-FPS_SET = 120: int
-UPS_SET = (int) (200 * GAME_SPEED): int
-gameFrame: GameFrame
-playing: Playing
-menu: Menu
-end: End
-pause: Pause
-model: Model
-view: View
--
+Controller(): ctor
+getPlaying(): Playing
+getMenu(): Menu
+getPause(): Pause
+setPause(Pause pause): void
+getEnd(): End
+getGameFrame(): GameFrame
+startGameLoop(): void
+stopGameLoop(): void
+resetGame(): void
-update(): void
+run(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5852</x>
      <y>3360</y>
      <w>168</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>game.controller.gamestates::End
--
--
+End(Controller game): ctor
+update(): void
+keyPressed(KeyEvent e): void
+keyReleased(KeyEvent e): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5670</x>
      <y>3360</y>
      <w>175</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>game.controller.gamestates::Menu
--
--
+Menu(Controller game): ctor
+update(): void
+keyPressed(KeyEvent e): void
+keyReleased(KeyEvent e): void
+startGame(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6027</x>
      <y>3360</y>
      <w>175</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>game.controller.gamestates::Pause
--
--
+Pause(Controller controller): ctor
+update(): void
+keyPressed(KeyEvent e): void
+keyReleased(KeyEvent e): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5670</x>
      <y>3451</y>
      <w>182</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>game.controller.gamestates::Playing
--
--
+Playing(Controller controller): ctor
+update(): void
+keyPressed(KeyEvent e): void
+keyReleased(KeyEvent e): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6076</x>
      <y>3451</y>
      <w>175</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>game.controller.gamestates::State
--
#controller: Controller
--
+State(Controller controller): ctor
+getController(): Controller</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5859</x>
      <y>3451</y>
      <w>210</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
game.controller.gamestates::Statemethods
--
-
+update(): void
+keyPressed(KeyEvent e): void
+keyReleased(KeyEvent e): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6160</x>
      <y>3122</y>
      <w>203</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>game.controller::InputManager
--
-controller: Controller
--
+InputManager(Controller controller): ctor
+keyTyped(KeyEvent e): void
+keyPressed(KeyEvent e): void
+keyReleased(KeyEvent e): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5467</x>
      <y>3136</y>
      <w>161</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>game.controller::JBubbleBobble
--

+main(String[] args): void &lt;&lt;static&gt;&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>5425</x>
      <y>3087</y>
      <w>959</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>game.controller
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>5663</x>
      <y>3339</y>
      <w>595</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>game.controller.gamestates
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6615</x>
      <y>3178</y>
      <w>133</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6615</x>
      <y>3206</y>
      <w>133</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7063</x>
      <y>3955</y>
      <w>49</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6699</x>
      <y>3955</y>
      <w>385</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;60.0;530.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7063</x>
      <y>3955</y>
      <w>343</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>470.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7049</x>
      <y>4256</y>
      <w>49</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7434</x>
      <y>4200</y>
      <w>49</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5292</x>
      <y>3038</y>
      <w>973</w>
      <h>469</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>1370.0;120.0;610.0;10.0;140.0;40.0;10.0;650.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6160</x>
      <y>3234</y>
      <w>203</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>&lt;Enumeration&gt;
game.controller.gamestates::GameState
--
PLAYING
MENU
WIN
LOSS
PAUSE
--
+ state: GameState &lt;&lt;static&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4256</x>
      <y>3213</y>
      <w>371</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>game.view::AnimationAndImagesLoader
--
-playerAnimations = new HashMap(): Map&lt;String, ImageIcon&gt; &lt;&lt;static&gt;&gt;
-PLAYER_WALK_LEFT = "player/left_walk.gif": String &lt;&lt;static&gt;&gt;
-PLAYER_WALK_RIGHT = "player/right_walk.gif": String &lt;&lt;static&gt;&gt;
-PLAYER_STUN_LEFT = "player/stun_left.gif": String &lt;&lt;static&gt;&gt;
-PLAYER_STUN_RIGHT = "player/stun_right.gif": String &lt;&lt;static&gt;&gt;
-PLAYER_BUBBLE_LEFT = "player/bubble_left.gif": String &lt;&lt;static&gt;&gt;
-PLAYER_BUBBLE_RIGHT = "player/bubble_right.gif": String &lt;&lt;static&gt;&gt;
--
-loadImageIcon(String relativePath): ImageIcon &lt;&lt;static&gt;&gt;
-getPlayerAnimation(String animationKey): ImageIcon &lt;&lt;static&gt;&gt;
+getPlayerImage(String animationKey): Image &lt;&lt;static&gt;&gt;
-loadEntityAnimation(String relativePath): ImageIcon &lt;&lt;static&gt;&gt;
+loadEntityImage(String relativePath): Image &lt;&lt;static&gt;&gt;
+loadBubblePoppingImage(): Image &lt;&lt;static&gt;&gt;
+loadBubbleEnemyImage(char code): Image &lt;&lt;static&gt;&gt;
+loadEnemyImage(char code, Direction direction, ColorState color): Image &lt;&lt;static&gt;&gt;
+loadDeadEnemyImage(char code): Image &lt;&lt;static&gt;&gt;
+getImage(char imageCode): BufferedImage &lt;&lt;static&gt;&gt;
+getImage(Character type, String position): BufferedImage &lt;&lt;static&gt;&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5180</x>
      <y>3213</y>
      <w>189</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>game.view::AudioManager
--
-instance: AudioManager &lt;&lt;static&gt;&gt;
--
-AudioManager(): ctor
+getInstance(): AudioManager &lt;&lt;static&gt;&gt;
+play(String filename): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4676</x>
      <y>3528</y>
      <w>280</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>game.view::CheatButton
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
--
+CheatButton(Image img, ActionListener actionListener): ctor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4711</x>
      <y>3423</y>
      <w>217</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>game.view.frames::CheatFrame
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
--
+CheatFrame(): ctor
-addButtons(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4963</x>
      <y>3409</y>
      <w>336</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>game.view.frames::GameFrame
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-layoutPanel: JPanel
-levelPanel: LevelPanel
-menuPanel: MenuPanel
-winPanel: EndPanel
-lossPanel: EndPanel
-pausePanel: PausePanel
-scoreLabel: JLabel
-highScoreLabel: JLabel
--
+GameFrame(Controller controller, InputManager playerController): ctor
+getLevelPanel(): LevelPanel
+getMenuPanel(): MenuPanel
+showState(Screen screen): void
+updateScoreAndHighscore(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4228</x>
      <y>3479</y>
      <w>217</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>game.view::ImageLoader
--
+importImg(String path): BufferedImage &lt;&lt;static&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4557</x>
      <y>3913</y>
      <w>203</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>game.view.panels::EndPanel
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-img: Image
--
+EndPanel(Ending ending): ctor
#paintComponent(Graphics g): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4543</x>
      <y>3843</y>
      <w>238</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>game.view.panels::LeaderboardPanel
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
--
+LeaderboardPanel(): ctor
#paintComponent(Graphics g): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4487</x>
      <y>3689</y>
      <w>294</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>game.view.panels::LevelPanel
--
+serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
+SCALE = 1.5f: float &lt;&lt;static&gt;&gt;
-tilesImage: BufferedImage
--
+LevelPanel(): ctor
-setPanelSize(): void
+renderTilesOnce(GameFrame gameFrame): void
+startLevelTransition(int levelNumber): void
#paintComponent(Graphics g): void
-renderPlayer(Player player, Graphics g): void
-renderEnemy(Enemy enemy, Graphics g): void
-renderEntity(Entity entity, Graphics g): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4270</x>
      <y>3689</y>
      <w>210</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>game.view.panels::MenuPanel
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-menuImage: BufferedImage
-currentUserPanel: UserPanel
-userSelectionPopUp: JPopupMenu
--
+MenuPanel(): ctor
-loadImage(): void
-initMenu(): void
-updateUserSelectionPopUp(): void
+updateCurrentUserPanel(): void
+showLeaderboard(): void
#paintComponent(Graphics g): void
+showNewUserDialog(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4788</x>
      <y>3843</y>
      <w>350</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>game.view.panels::PausePanel
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-levelImage: BufferedImage
-levelPanel: LevelPanel
--
+PausePanel(LevelPanel levelPanel, Controller controller): ctor
+drawBackground(): void
-blurImage(): void
#paintComponent(Graphics g): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4788</x>
      <y>3689</y>
      <w>343</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>game.view.panels::TransitionPanel
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-currentLevelImage: Image
-nextLevelImage: Image
-progress: float
-transitionTimer: Timer
+TRANSITION_DURATION = 2000: int &lt;&lt;static&gt;&gt;
-gameFrame: GameFrame
--
+TransitionPanel(GameFrame gameFrame): ctor
+startTransition(Image currentImage, Image nextImage): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4305</x>
      <y>3871</y>
      <w>203</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>game.view.panels::UserPanel
--
-serialVersionUID = 1L: long &lt;&lt;static&gt;&gt;
-userButton: JButton
--
+UserPanel(User user): ctor
+getUserButton(): JButton
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4655</x>
      <y>3213</y>
      <w>483</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>game.view::View
--
-instance: View &lt;&lt;static&gt;&gt;
-gameFrame: GameFrame
-levelPanel: LevelPanel
-cheatFrame: CheatFrame
-level: Level
-transitionPanel: TransitionPanel
--
-View(GameFrame gameFrame, LevelPanel levelPanel, TransitionPanel transitionPanel): ctor
+getInstance(GameFrame gameFrame): View &lt;&lt;static&gt;&gt;
+getInstance(): View &lt;&lt;static&gt;&gt;
+getGameFrame(): GameFrame
+getMenuPanel(): MenuPanel
+getLevelPanel(): LevelPanel
+getTransitionPanel(): TransitionPanel
+getLevel(): Level
+getCheatFrame(): CheatFrame
+setCheatFrame(CheatFrame cheatFrame): void
+update(Observable o, Object arg): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>4088</x>
      <y>3171</y>
      <w>1302</w>
      <h>833</h>
    </coordinates>
    <panel_attributes>game.view
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>4655</x>
      <y>3381</y>
      <w>658</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>game.view.frames
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>4263</x>
      <y>3668</y>
      <w>882</w>
      <h>322</h>
    </coordinates>
    <panel_attributes>game.view.panels
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4809</x>
      <y>3479</y>
      <w>49</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5131</x>
      <y>3234</y>
      <w>63</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>70.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4319</x>
      <y>3507</y>
      <w>147</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4445</x>
      <y>3437</y>
      <w>56</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;330.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4620</x>
      <y>3416</y>
      <w>105</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4438</x>
      <y>3458</y>
      <w>287</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;70.0;390.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3598</x>
      <y>2009</y>
      <w>364</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>/game.model.bubbles::Bubble/
--
#lifeSpan: float
--
+Bubble(float x, float y, float width, float height, char code): ctor
+Bubble(float x, float y, float width, float height, float lifeSpan, char code): ctor
+getLifeSpan(): float
+setLifeSpan(float lifeSpan): void
#decreaseLifeSpan(float k): void
+pop(): void
#rise(float airSpeed): void
#updateYPos(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3619</x>
      <y>1799</y>
      <w>308</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>game.model.bubbles::BubbleFactory
--
-bubblesSpawnPoints: List&lt;Float&gt;
--
+BubbleFactory(List&lt;Float&gt; bubbleSpawnPoints): ctor
+createPlayerBubble(float x, float y, float xSpeed): PlayerBubble
+createSpecialBubble(): Bubble
+createSpecialBubble(Bubble bubble): Bubble
+createExtendBubble(): ExtendBubble
-setSpecialBubblePosition(Bubble bubble): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4046</x>
      <y>1792</y>
      <w>273</w>
      <h>364</h>
    </coordinates>
    <panel_attributes>game.model.bubbles::BubbleManager
--
-bubbleFactory: BubbleFactory
-specialBubbles: List&lt;Bubble&gt;
-playerBubbles: List&lt;PlayerBubble&gt;
-fireBalls: List&lt;FireBall&gt;
-bolts: List&lt;Bolt&gt;
-waters: List&lt;Water&gt;
-spawnSpecialBubbleTimer: Timer
-waterUpdateTimer: Timer
--
+BubbleManager(List&lt;Float&gt; bubbleSpawnPoints): ctor
+createPlayerBubble(float x, float y, float xSpeed): void
+createSpecialBubble(): void
+createSpecialBubble(Bubble specialBubble): void
+createExtendBubble(): void
+addBubble(Bubble bubble): void
+removeBubble(Bubble bubble): void
+removePlayerBubble(PlayerBubble playerBubble): void
+addFireBall(FireBall fireBall): void
+removeFireBall(FireBall fireBall): void
+addBolt(Bolt bolt): void
+removeBolt(Bolt bolt): void
+addWater(Water water): void
+removeWater(Water water): void
+getBubbles(): List&lt;Bubble&gt;
+getPlayerBubbles(): List&lt;PlayerBubble&gt;
+getFireBalls(): List&lt;FireBall&gt;
+getBolts(): List&lt;Bolt&gt;
+getWaters(): List&lt;Water&gt;
+updateBubbles(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4305</x>
      <y>2254</y>
      <w>189</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>game.model.bubbles::ExtendBubble
--
+CODES = { '(', ')', '[', ']', '{', '}' }: char[] &lt;&lt;static&gt;&gt;
-codesIndex: int &lt;&lt;static&gt;&gt;
--
+ExtendBubble(): ctor
+incrementCodesIndex(): void &lt;&lt;static&gt;&gt;
+pop(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3717</x>
      <y>2254</y>
      <w>175</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>game.model.bubbles::FireBubble
--
+CODE = '-': char &lt;&lt;static&gt;&gt;
--
+FireBubble(): ctor
+pop(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3101</x>
      <y>2254</y>
      <w>406</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>game.model.bubbles::PlayerBubble
--
-lastKillTime: long &lt;&lt;static&gt;&gt;
+CODE = '°': char &lt;&lt;static&gt;&gt;
-extraTimeHorizontalMoving = 1: float &lt;&lt;static&gt;&gt;
-extraXSpeed = 1: float &lt;&lt;static&gt;&gt;
-popTimer: Timer
-enemy: Enemy
-hasEnemy: boolean
-timeHorizontalMoving: float
-isPopped: boolean
--
+PlayerBubble(float x, float y, float width, float height, float xSpeed, float airSpeed): ctor
+getExtraTravelTime(): float &lt;&lt;static&gt;&gt;
+setExtraTravelTime(float extraTravelTime): void &lt;&lt;static&gt;&gt;
+getExtraXSpeed(): float &lt;&lt;static&gt;&gt;
+setExtraXSpeed(float extraXSpeed): void &lt;&lt;static&gt;&gt;
+getEnemy(): Enemy
+setEnemy(Enemy enemy): void
+hasEnemy(): boolean
+getTimeHorizontalMoving(): float
+setTimeHorizontalMoving(float timeHorizontalMoving): void
+isHasEnemy(): boolean
+setHasEnemy(boolean hasEnemy): void
+isPopped(): boolean
+resetLifeSpan(): void
#decreaseTimeHorizontalMoving(float k): void
#rise(float airSpeed): void
+pop(): void
+popAndKill(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3514</x>
      <y>2254</y>
      <w>189</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>game.model.bubbles::SpecialBubble
--
+CODE = '%': char &lt;&lt;static&gt;&gt;
--
+SpecialBubble(): ctor
+pop(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4130</x>
      <y>2408</y>
      <w>210</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>game.model.bubbles.special_effects::Bolt
--
+BOLT_SPEED = 2: float &lt;&lt;static&gt;&gt;
+CODE = '?': char &lt;&lt;static&gt;&gt;
--
+Bolt(float x, float y): ctor
-setBoltXSpeed(): void
+updateXPos(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3619</x>
      <y>2408</y>
      <w>224</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>game.model.bubbles.special_effects::FireBall
--
+CODE = '#': char &lt;&lt;static&gt;&gt;
+fireState: FireState
--
+FireBall(float x, float y, FireState fireState): ctor
+FireBall(float x, float y): ctor
+getFireState(): FireState
#updateYPos(): void
-spawnFireBalls(): void
+expand(): void
-scheduleRemoval(long delay): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3850</x>
      <y>2408</y>
      <w>266</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>game.model.bubbles.special_effects::Water
--
+CODE = '_': char &lt;&lt;static&gt;&gt;
-capturedEntity: MovingEntity
-watersToSpawn: int
-lifeSpan: int
--
+Water(float x, float y, int watersToSpawn): ctor
+getCapturedEntity(): MovingEntity
+setCapturedEntity(MovingEntity capturedEntity): void
-delete(): void
-updatePosition(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4095</x>
      <y>2254</y>
      <w>196</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>game.model.bubbles::ThunderBubble
--
+CODE = '+': char &lt;&lt;static&gt;&gt;
--
+ThunderBubble(): ctor
+pop(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3899</x>
      <y>2254</y>
      <w>182</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>game.model.bubbles::WaterBubble
--
+CODE = '/': char &lt;&lt;static&gt;&gt;
--
+WaterBubble(): ctor
+pop(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2072</x>
      <y>2282</y>
      <w>266</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>game.model.enemies::Banebou
--
+CODE = 'N': char &lt;&lt;static&gt;&gt;
--
+Banebou(float x, float y): ctor
+Banebou(float x, float y, float width, float height): ctor
+changeDirection(): void
+jump(): void
+gravity(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2793</x>
      <y>2023</y>
      <w>259</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>game.model.enemies::Boss
--
+CODE = 'B': char &lt;&lt;static&gt;&gt;
-lives: int
-invulnerabilityTimer: Timer
-isInvulnerable: boolean
--
+Boss(float x, float y): ctor
+getInvulnerabilityTimer(): Timer
+getLives(): int
+setInvulnerabilityTimer(Timer invincibilityTimer): void
+changeDirection(): void
-randomizeDirection(): void
+updateXPos(): void
+updateYPos(): void
+removeEnemy(): void
+updateEntity(): void
+looseLife(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2387</x>
      <y>2079</y>
      <w>301</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>/game.model.enemies::Enemy/
--
+RED_TIME = 15000: int &lt;&lt;static&gt;&gt;
-colorState: ColorState
#redXSpeed: float
#movementSpeed: float
-dead: boolean
#isStopped: boolean
--
+Enemy(float x, float y, char code): ctor
+Enemy(float x, float y, float width, float height, char code): ctor
+getMovementSpeed(): float
+isDead(): boolean
+isStopped(): boolean
+getColorState(): ColorState
+setMovementSpeed(float speed): void
+setStopped(boolean isStopped): void
+setColorState(ColorState colorState): void
+kill(): void
+removeEnemy(): void
+randomBoolean(int chances): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2436</x>
      <y>1771</y>
      <w>196</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>game.model.enemies::EnemyManager
--
-enemies: List&lt;Enemy&gt;
-lasers: List&lt;Laser&gt;
-shootLaserTimer: Timer
-changeColorTimer: Timer
--
+EnemyManager(): ctor
+addEnemy(Enemy enemy): void
+addLaser(Laser laser): void
+removeEnemy(Enemy enemy): void
+removeLaser(Laser laser): void
+getEnemies(): List&lt;Enemy&gt;
+getLasers(): List&lt;Laser&gt;
+getHazards(): List&lt;MovingEntity&gt;
+updateEnemies(): void
+isBoss(): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2387</x>
      <y>2422</y>
      <w>259</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>game.model.enemies::Invader
--
+CODE = 'I': char &lt;&lt;static&gt;&gt;
+ATTACK_INTERVAL = 1000: long &lt;&lt;static&gt;&gt;
-landed: boolean
--
+Invader(float x, float y, float width, float height): ctor
+Invader(float x, float y): ctor
+changeDirection(): void
-randomizeDirection(): void
+gravity(): void
+shoot(): void
+updateEntity(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2394</x>
      <y>2639</y>
      <w>245</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>game.model.enemies::Laser
--
+CODE = '"': char &lt;&lt;static&gt;&gt;
--
+Laser(float x, float y, float width, float height): ctor
#updateYPos(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2695</x>
      <y>2408</y>
      <w>259</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>game.model.enemies::Monsta
--
+CODE = 'M': char &lt;&lt;static&gt;&gt;
+FLIGHT_SPEED = 0.3f: float &lt;&lt;static&gt;&gt;
--
+Monsta(float x, float y): ctor
+Monsta(float x, float y, float width, float height): ctor
-initializeMonsta(): void
+changeDirection(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2086</x>
      <y>2450</y>
      <w>252</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>game.model.enemies::Pulpul
--
+CODE = 'U': char &lt;&lt;static&gt;&gt;
--
+Pulpul(float x, float y): ctor
+Pulpul(float x, float y, float width, float height): ctor
-initializePulpul(): void
+changeDirection(): void
-randomizeDirection(): void
+updateXPos(): void
+updateYPos(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2044</x>
      <y>2079</y>
      <w>273</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>game.model.enemies::SkelMonsta
--
+CODE = 'S': char &lt;&lt;static&gt;&gt;
+FLIGHT_SPEED = 0.4f: float &lt;&lt;static&gt;&gt;
-isMoving: boolean
--
+SkelMonsta(float x, float y): ctor
+SkelMonsta(float x, float y, float width, float height): ctor
+isMoving(): boolean
+setMoving(boolean isMoving): void
-trackPlayer(): void
-initializeSkelMonsta(): void
+updateXPos(): void
+updateYPos(): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2814</x>
      <y>2268</y>
      <w>168</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>game.model.enemies::ZenChan
--
+CODE = 'Z': char &lt;&lt;static&gt;&gt;
--
+ZenChan(float x, float y): ctor
+changeDirection(): void
+gravity(): void
+updateEntity(): void
+jump(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2121</x>
      <y>763</y>
      <w>322</w>
      <h>343</h>
    </coordinates>
    <panel_attributes>/game.model.entities::Entity/
--
#x, y: float
#width, height: float
-code: char
--
+Entity(float x, float y, float width, float height, char code): ctor
+Entity(float x, float y, char code): ctor
+checkCollision(T entity, U otherEntity): Optional&lt;U&gt; &lt;&lt;static&gt;&gt;
+checkCollision(T entity, List&lt;U&gt; list): Optional&lt;U&gt; &lt;&lt;static&gt;&gt;
+checkBottomCollision(T entity, List&lt;U&gt; list): Optional&lt;U&gt; &lt;&lt;static&gt;&gt;
+checkCollisions(List&lt;T&gt; list1, List&lt;U&gt; list2): Optional&lt;Entity[]&gt; &lt;&lt;static&gt;&gt;
+roundPosition(float position): float &lt;&lt;static&gt;&gt;
+getX(): float
+getY(): float
+getWidth(): float
+getHeight(): float
+getCode(): char
+getPosition(): float[]
+setX(float x): void
+setY(float y): void
+setPosition(float x, float y): void
+setHeight(float height): void
+setWidth(float width): void
+hit(Entity entity): boolean
+topHit(Entity entity): boolean
+getDistanceFrom(Entity entity): float
+hashCode(): int
+equals(Object obj): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2114</x>
      <y>1155</y>
      <w>329</w>
      <h>294</h>
    </coordinates>
    <panel_attributes>/game.model.entities::MovingEntity/
--
+GRAVITY = 0.02f: float &lt;&lt;static&gt;&gt;
+MAX_FALLING_SPEED = 1.6f: float &lt;&lt;static&gt;&gt;
#direction: Direction
#xSpeed: float
#airSpeed: float
#jumpSpeed: float
#fallSpeedAfterCollision: float
#inAir: boolean
--
+MovingEntity(float x, float y, char code): ctor
+MovingEntity(float x, float y, float width, float height, char code): ctor
+getxSpeed(): float
+getAirSpeed(): float
+getDirection(): Direction
+setxSpeed(float xSpeed): void
+setAirSpeed(float airSpeed): void
+setJumpSpeed(float jumpSpeed): void
+setDirection(Direction direction): void
+updateXPos(): void
#updateYPos(): void
+resetInAir(): void
+stop(): void
+move(float speed): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2555</x>
      <y>770</y>
      <w>287</w>
      <h>679</h>
    </coordinates>
    <panel_attributes>game.model.entities::Player
--
+CODE = 'P': char &lt;&lt;static&gt;&gt;
+NUMBER_OF_LIVES = 3: int &lt;&lt;static&gt;&gt;
+INVULNERABILITY_INTERVAL = 5000: long &lt;&lt;static&gt;&gt;
+ATTACK_INTERVAL = 100: long &lt;&lt;static&gt;&gt;
-instance: Player &lt;&lt;static&gt;&gt;
-stunTimer: Timer
-invulnerabilityTimer: Timer
-bubbleDirection: Direction
-lives: int
-isStunned: boolean
-attackSpeed: long
-extraXSpeed: float
-previousX: float
-isJumping: boolean
-isInvulnerable: boolean
-canShoot: boolean
-specialBubbleActive: boolean
-crystalRingActive: boolean
-amethystRingActive: boolean
-rubyRingActive: boolean
--
-Player(float x, float y, float width, float height): ctor
+getInstance(): Player
+getInstance(float x, float y, float width, float height): Player
+getLives(): int
+getBubbleDirection(): Direction
+isJumping(): boolean
+isStunned(): boolean
+canShoot(): boolean
+getSpecialBubbleActive(): boolean
+isCrystalRingActive(): boolean
+isAmethystRingActive(): boolean
+isRubyRingActive(): boolean
+isInvulnerable(): boolean
+setDirection(Direction direction): void
+setX(float x): void
+setExtraXSpeed(float extraXSpeed): void
+setJumping(boolean isJumping): void
+setLives(int lives): void
+setSpecialBubbleActive(boolean specialBubbleActive): void
+setCrystalRingActive(boolean crystalRingActive): void
+getInvulnerabilityTimer(): Timer
+setInvulnerabilityTimer(Timer invincibilityTimer): void
+setAmethystRingActive(boolean amethystRingActive): void
+setRubyRingActive(boolean rubyRingActive): void
+setInvulnerable(boolean isInvulnerable): void
+setStunned(boolean isStunned): void
+setCanShoot(boolean canShoot): void
+setBubbleDirection(Direction bubbleDirection): void
+increaseFiringRate(long delta): void
+decreaseFiringRate(long delta): void
+gravity(): void
+jump(): void
+looseLife(): void
+heal(): void
+move(float speed): void
+shoot(): void
+stun(int stunTime): void
+updateEntity(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1190</x>
      <y>721</y>
      <w>231</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>game.model::Fruit
--
-points: int
--
+Fruit(float x, float y, FruitType fruitType): ctor
+randomFruitType(): FruitType &lt;&lt;static&gt;&gt;
+getPoints(): int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1232</x>
      <y>546</y>
      <w>147</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>game.model::FruitManager
--
-fruits: List&lt;Fruit&gt;
--
+FruitManager(): ctor
+getFruits(): List&lt;Fruit&gt;
+addFruit(Fruit fruit): void
+removeFruit(Fruit fruit): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1036</x>
      <y>840</y>
      <w>336</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>game.model::HelpMethods
--
+canMoveHere(float x, float y, float width, float height): boolean &lt;&lt;static&gt;&gt;
-isSolid(float x, float y): boolean &lt;&lt;static&gt;&gt;
+isEntityInsideWall(Entity entity): boolean &lt;&lt;static&gt;&gt;
+isEntityInsideWall(float x, float y, float width, float height): boolean &lt;&lt;static&gt;&gt;
+isEntityGrounded(MovingEntity movingEntity): boolean &lt;&lt;static&gt;&gt;
+isSolidHorizontalLine(float x1, float x2, float y): boolean &lt;&lt;static&gt;&gt;
+isSolidVerticalLine(float x, float y1, float y2): boolean &lt;&lt;static&gt;&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4270</x>
      <y>1484</y>
      <w>210</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
game.model.interfaces::ChangeDirection
--
--
~changeDirection(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4487</x>
      <y>1484</y>
      <w>168</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
game.model.interfaces::Gravity
--
--
~gravity(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4270</x>
      <y>1554</y>
      <w>168</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
game.model.interfaces::Jumping
--
--
~jump(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4445</x>
      <y>1554</y>
      <w>175</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
game.model.interfaces::Shooting
--
--
~shoot(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4270</x>
      <y>1624</y>
      <w>182</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
game.model.interfaces::Vulnerable
--
--
~looseLife(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1806</x>
      <y>56</y>
      <w>343</w>
      <h>574</h>
    </coordinates>
    <panel_attributes>game.model.level::Level
--
+NUM_HORIZONTAL_TILES = 30: int &lt;&lt;static&gt;&gt;
+NUM_VERTICAL_TILES = 24: int &lt;&lt;static&gt;&gt;
+GAME_WIDTH = NUM_HORIZONTAL_TILES * Tile.TILE_SIZE: int &lt;&lt;static&gt;&gt;
+GAME_HEIGHT = NUM_VERTICAL_TILES * Tile.TILE_SIZE: int &lt;&lt;static&gt;&gt;
-simultaneousKills: int &lt;&lt;static&gt;&gt;
-player: Player
-tiles: List&lt;Tile&gt;
-enemyManager: EnemyManager
-bubbleManager: BubbleManager
-powerupManager: PowerupManager
-fruitManager: FruitManager
-lvlData: char[][]
-playerSpawnPoint: float[]
-bubblesSpawnPoints: List&lt;Float&gt;
-levelNumber: int
--
+Level(int levelNumber): ctor
+getLevelNumber(): int
+setLevelNumber(int levelNumber): void
+getLvlData(): char[][]
+getEntities(): List&lt;Entity&gt;
+getPowerupManager(): PowerupManager
+getFruitManager(): FruitManager
+getPlayer(): Player
+setPlayer(Player player): void
+addPlayer(Player player): void
+setPlayerSpawnPoint(float x, float y): void
+getPlayerSpawnPoint(): float[]
+getEnemyManager(): EnemyManager
+setEnemyManager(EnemyManager eManager): void
+addEnemy(Enemy enemy): void
-setEnemyInBubble(PlayerBubble b, Enemy e): void
+getSimultaneousKills(): int &lt;&lt;static&gt;&gt;
+setSimultaneousKills(int simultaneousKills): void &lt;&lt;static&gt;&gt;
+getBubbleManager(): BubbleManager
+setBubbleManager(BubbleManager bManager): void
+getBubblesSpawnPoints(): List&lt;Float&gt;
-setBubblesSpawnPoints(): void
+getTiles(): List&lt;Tile&gt;
+setTiles(List&lt;Tile&gt; tiles): void
+addTile(Tile tile): void
+captureEnemies(): void
-checkJump(): void
-checkPlayerBubbleCollisions(): void
+checkLooseLife(): void
-checkSpecialCollisions(): void
-checkPowerupCollisions(): void
-checkFruitCollisions(): void
-checkAllCollisions(): void
+updateLevel(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1477</x>
      <y>238</y>
      <w>238</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>game.model.level::LevelLoader
--
-PLAYER = 'P': char &lt;&lt;static&gt;&gt;
-ZEN_CHAN = 'Z': char &lt;&lt;static&gt;&gt;
-MONSTA = 'M': char &lt;&lt;static&gt;&gt;
-BANEBOU = 'N': char &lt;&lt;static&gt;&gt;
-PULPUL = 'U': char &lt;&lt;static&gt;&gt;
-SKELMONSTA = 'S': char &lt;&lt;static&gt;&gt;
-INVADER = 'I': char &lt;&lt;static&gt;&gt;
-BOSS = 'B': char &lt;&lt;static&gt;&gt;
--
+readLevelFile(int levelNum): char[][] &lt;&lt;static&gt;&gt;
+loadLevel(Level level, int levelNum): char[][] &lt;&lt;static&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2268</x>
      <y>70</y>
      <w>294</w>
      <h>392</h>
    </coordinates>
    <panel_attributes>game.model::Model
--
-instance: Model &lt;&lt;static&gt;&gt;
-nextLevelTimer: Timer
-levels: List&lt;Level&gt;
-levelIterator: Iterator&lt;Level&gt;
-currentLevel: Level
-users: List&lt;User&gt;
-currentUser: User
-toUpdate = true: boolean
-modelState: ModelState
--
-Model(): ctor
+getInstance(): Model
+resetModel(): void
+getCurrentLevel(): Level
+getLevels(): List&lt;Level&gt;
+getModelState(): ModelState
+getUsers(): List&lt;User&gt;
+getCurrentUser(): User
+getUserByNickname(String selectedNickname): User
+isToUpdate(): boolean
+setWin(): void
+setModelState(ModelState state): void
+setCurrentUser(User currentUser): void
+setToUpdate(boolean toUpdate): void
+setCurrentUserByNickname(String selectedNickname): void
+addUser(User user): void
+loadLevels(): void
+nextLevel(): void
+nextLevelTransition(): void
+updateModel(): void
-updatePoints(): void
-loadUsers(): void
+sendNotification(Object arg): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4102</x>
      <y>3577</y>
      <w>266</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>game.model::Paths
--
-pathsMap = new HashMap(): Map&lt;Character, String&gt;
--
+getPath(Character letter): String &lt;&lt;static&gt;&gt;
+getAbsolutePath(String relativePath): String &lt;&lt;static&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1505</x>
      <y>2492</y>
      <w>196</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>game.model.powerups::AmethystRing
--
+CODE = '=': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 2: int &lt;&lt;static&gt;&gt;
+POINTS = 1000: int &lt;&lt;static&gt;&gt;
+DURATION = 8000: long &lt;&lt;static&gt;&gt;
--
+AmethystRing(): ctor
+effect(): void
+resetToNormal(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1470</x>
      <y>1778</y>
      <w>231</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>game.model.powerups::BlueCandy
--
+CODE = '£': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 15: int
+POINTS = 100: int
+DURATION = 10000: long
+INCREASED_X_SPEED_AMOUNT = 2: float
--
+BlueCandy(): ctor
+effect(): void
+resetToNormal(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1022</x>
      <y>2590</y>
      <w>161</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>game.model.powerups::Clock
--
+CODE = '*': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 1: int &lt;&lt;static&gt;&gt;
+POINTS = 200: int &lt;&lt;static&gt;&gt;
+DURATION = 6000: long &lt;&lt;static&gt;&gt;
--
+Clock(): ctor
+effect(): void
+resetToNormal(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1512</x>
      <y>2184</y>
      <w>182</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>game.model.powerups::CrystalRing
--
+CODE = '&amp;': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 2: int &lt;&lt;static&gt;&gt;
+POINTS = 1000: int &lt;&lt;static&gt;&gt;
+DURATION = 3000: long &lt;&lt;static&gt;&gt;
--
+CrystalRing(): ctor
+effect(): void
+resetToNormal(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1225</x>
      <y>2569</y>
      <w>175</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>game.model.powerups::Dynamite
--
+CODE = '^': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 1: int &lt;&lt;static&gt;&gt;
+POINTS = 200: int &lt;&lt;static&gt;&gt;
+DURATION = 1: long &lt;&lt;static&gt;&gt;
--
+Dynamite(): ctor
+effect(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1799</x>
      <y>2149</y>
      <w>203</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>game.model.powerups::OrangeParasol
--
+SPAWN_CONDITION = 2: int &lt;&lt;static&gt;&gt;
--
+OrangeParasol(): ctor
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1505</x>
      <y>2065</y>
      <w>231</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>/game.model.powerups::Parasol/
--
+CODE = '@': char &lt;&lt;static&gt;&gt;
-POINTS = 5000: int &lt;&lt;static&gt;&gt;
-DURATION = 0: long &lt;&lt;static&gt;&gt;
-levelsToSkip: int &lt;&lt;static&gt;&gt;
--
+Parasol(float x, float y, int levelsToSkip): ctor
+effect(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1197</x>
      <y>1778</y>
      <w>252</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>game.model.powerups::PinkCandy
--
+CODE = '!': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 30: int &lt;&lt;static&gt;&gt;
+POINTS = 100: int &lt;&lt;static&gt;&gt;
+DURATION = 10000: long &lt;&lt;static&gt;&gt;
+INCREASED_TRAVEL_TIME_AMOUNT = 2: float &lt;&lt;static&gt;&gt;
--
+PinkCandy(): ctor
+effect(): void
+resetToNormal(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>777</x>
      <y>2149</y>
      <w>315</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>/game.model.powerups::Powerup/
--
#points: int
#duration: long
#toRemove: boolean
--
+Powerup(float x, float y, char code, int points, long duration): ctor
+getPoints(): long
+getDuration(): long
+isToRemove(): boolean
+effect(): void
+resetToNormal(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>63</x>
      <y>1897</y>
      <w>616</w>
      <h>658</h>
    </coordinates>
    <panel_attributes>game.model.powerups::PowerupFactory
--
-distanceTravelled: float
-numberOfJumpsOnBubbles: int
-numberOfBubbles: int
-numberOfBubblesPopped: int
-numberOfFireBubblesPopped: int
-numberOfWaterBubblesPopped: int
-numberOfThunderBubblesPopped: int
-numberOfSpecialBubblesPopped: int
-numberOfExtendBubblesPopped: int
-numberOfYellowCandies: int
-numberOfBlueCandies: int
-numberOfPinkCandies: int
-lvlData: char[][]
--
+PowerupFactory(char[][] lvlData): ctor
+getDistanceTravelled(): float
+getNumberOfJumpsOnBubbles(): int
+getNumberOfBubbles(): int
+getNumberOfBubblesPopped(): int
+getNumberOfFireBubblesPopped(): int
+getNumberOfWaterBubblesPopped(): int
+getNumberOfThunderBubblesPopped(): int
+getNumberOfSpecialBubblesPopped(): int
+getNumberOfExtendBubblesPopped(): int
+getNumberOfYellowCandies(): int
+getNumberOfBlueCandies(): int
+getNumberOfPinkCandies(): int
+setDistanceTravelled(float distanceTravelled): void
+setNumberOfJumpsOnBubbles(int numberOfJumpsOnBubbles): void
+setNumberOfBubbles(int numberOfBubbles): void
+setNumberOfBubblesPopped(int numberOfBubblesPopped): void
+setNumberOfFireBubblesPopped(int numberOfFireBubblesPopped): void
+setNumberOfWaterBubblesPopped(int numberOfWaterBubblesPopped): void
+setNumberOfThunderBubblesPopped(int numberOfThunderBubblesPopped): void
+setNumberOfSpecialBubblesPopped(int numberOfSpecialBubblesPopped): void
+setNumberOfExtendBubblesPopped(int numberOfExtendBubblesPopped): void
+setNumberOfYellowCandies(int numberOfYellowCandies): void
+setNumberOfBlueCandies(int numberOfBlueCandies): void
+setNumberOfPinkCandies(int numberOfPinkCandies): void
+increaseNumberOfJumpsOnBubbles(): void
+increaseNumberOfBubbles(): void
+increaseNumberOfBubblesPopped(): void
+increaseNumberOfFireBubblesPopped(): void
+increaseNumberOfWaterBubblesPopped(): void
+increaseNumberOfThunderBubblesPopped(): void
+increaseNumberOfSpecialBubblesPopped(): void
+increaseNumberOfExtendBubblesPopped(): void
+increaseNumberOfYellowCandies(): void
+increaseNumberOfBlueCandies(): void
+increaseNumberOfPinkCandies(): void
+increaseDistanceTraveled(float newDistance): void
+getPercentDiff(float a, float b): float
+getPowerupsConditionCompletions(): HashMap&lt;Class&lt;? extends Powerup&gt;, Float&gt;
-addIfPositive(HashMap&lt;Class&lt;? extends Powerup&gt;, Float&gt; results, Class&lt;? extends Powerup&gt; powerupClass, float percentDiff): void
+createPowerup(PowerupManager powerupManager): Powerup
+createRandomPowerup(PowerupManager powerupManager): Powerup
+setPowerupPosition(Powerup powerup, PowerupManager powerupManager): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>805</x>
      <y>1932</y>
      <w>210</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>game.model.powerups::PowerupManager
--
-powerups: List&lt;Powerup&gt;
-powerupFactory: PowerupFactory
-spawnTimer: Timer
--
+PowerupManager(char[][] lvlData): ctor
+getPowerups(): List&lt;Powerup&gt;
+getPowerupFactory(): PowerupFactory
+createPowerup(): void
+createRandomPowerup(): void
+isTherePowerup(int x, int y): boolean
+addPowerup(Powerup powerup): void
+removePowerup(Powerup powerup): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1799</x>
      <y>2023</y>
      <w>196</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>game.model.powerups::PurpleParasol
--
+SPAWN_CONDITION = 4: int &lt;&lt;static&gt;&gt;
--
+PurpleParasol(): ctor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1799</x>
      <y>2086</y>
      <w>182</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>game.model.powerups::RedParasol
--
+SPAWN_CONDITION = 3: int &lt;&lt;static&gt;&gt;
--
+RedParasol(): ctor
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1512</x>
      <y>2303</y>
      <w>175</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>game.model.powerups::RubyRing
--
+CODE = '.': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 2: int &lt;&lt;static&gt;&gt;
+POINTS = 1000: int &lt;&lt;static&gt;&gt;
+DURATION = 3000: long &lt;&lt;static&gt;&gt;
--
+RubyRing(): ctor
+effect(): void
+resetToNormal(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>721</x>
      <y>2590</y>
      <w>273</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>game.model.powerups::Shoes
--
+CODE = '§': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 25 * Level.GAME_WIDTH: int &lt;&lt;static&gt;&gt;
+POINTS = 100: int &lt;&lt;static&gt;&gt;
+DURATION = 10000: long &lt;&lt;static&gt;&gt;
+INCREASED_X_SPEED_AMOUNT = 2f: float &lt;&lt;static&gt;&gt;
--
+Shoes(): ctor
+effect(): void
+resetToNormal(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1505</x>
      <y>1932</y>
      <w>245</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>game.model.powerups::YellowCandy
--
+CODE = '$': char &lt;&lt;static&gt;&gt;
+SPAWN_CONDITION = 5: int &lt;&lt;static&gt;&gt;
+POINTS = 100: int &lt;&lt;static&gt;&gt;
+INCREASED_FIRING_RATE_AMOUNT = 1: int &lt;&lt;static&gt;&gt;
+DURATION = 10000: long &lt;&lt;static&gt;&gt;
--
+YellowCandy(): ctor
+effect(): void
+resetToNormal(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1407</x>
      <y>847</y>
      <w>182</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>game.model.tiles::Tile
--
+TILE_SIZE = 16: int &lt;&lt;static&gt;&gt;
--
+Tile(float x, float y, char code): ctor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2702</x>
      <y>84</y>
      <w>511</w>
      <h>308</h>
    </coordinates>
    <panel_attributes>game.model.user::User
--
-nickname: String
-highScore: int
-avatarPath: String
-points: int
-playedGames: int
-gamesWon: int
-gamesLost: int
--
+User(String nickname, int highScore, String avatarPath, int playedGames, int gamesWon, int gamesLost): ctor
+getPlayedGames(): int
+setPlayedGames(int playedGames): void
+getGamesWon(): int
+setGamesWon(int gamesWon): void
+getGamesLost(): int
+setGamesLost(int gamesLost): void
+getAvatarPath(): String
+setAvatarPath(String avatarPath): void
+getNickname(): String
+setNickname(String nickname): void
+getHighScore(): int
+setHighScore(int highScore): void
+getPoints(): int
+addPoints(int pointsAmount): void
+addLostGame(): void
+addWonGame(): void
+setPoints(int points): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2702</x>
      <y>406</y>
      <w>490</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>game.model.user::UserMethods
--
+getUsersData(): HashMap&lt;String, List&lt;Integer&gt;&gt; &lt;&lt;static&gt;&gt;
+saveUsersData(String nickname, int highScore, int gamesPlayed, int gamesWon, int gamesLost): void &lt;&lt;static&gt;&gt;
+saveLastUser(User user): void &lt;&lt;static&gt;&gt;
+getLastUser(String path): String &lt;&lt;static&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>4718</w>
      <h>2905</h>
    </coordinates>
    <panel_attributes>game.model
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>3080</x>
      <y>1750</y>
      <w>1435</w>
      <h>882</h>
    </coordinates>
    <panel_attributes>game.model.bubbles
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>3605</x>
      <y>2387</y>
      <w>777</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>game.model.bubbles.special_effects
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2023</x>
      <y>1743</y>
      <w>1043</w>
      <h>994</h>
    </coordinates>
    <panel_attributes>game.model.enemies
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2058</x>
      <y>728</y>
      <w>938</w>
      <h>749</h>
    </coordinates>
    <panel_attributes>game.model.entities
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>4263</x>
      <y>1463</y>
      <w>399</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>game.model.interfaces
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1435</x>
      <y>21</y>
      <w>721</w>
      <h>630</h>
    </coordinates>
    <panel_attributes>game.model.level
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>49</x>
      <y>1729</y>
      <w>1967</w>
      <h>1141</h>
    </coordinates>
    <panel_attributes>game.model.powerups
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2688</x>
      <y>63</y>
      <w>553</w>
      <h>476</h>
    </coordinates>
    <panel_attributes>game.model.user
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1295</x>
      <y>623</y>
      <w>49</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2436</x>
      <y>1239</y>
      <w>133</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2282</x>
      <y>1099</y>
      <w>49</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3339</x>
      <y>2156</y>
      <w>434</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>600.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3920</x>
      <y>1855</y>
      <w>140</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3934</x>
      <y>1911</y>
      <w>126</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;140.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3766</x>
      <y>1911</y>
      <w>49</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3626</x>
      <y>2156</y>
      <w>161</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3773</x>
      <y>2156</y>
      <w>49</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3780</x>
      <y>2156</y>
      <w>217</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3794</x>
      <y>2156</y>
      <w>406</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;560.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3808</x>
      <y>2156</y>
      <w>609</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;850.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3983</x>
      <y>2324</y>
      <w>49</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4193</x>
      <y>2331</y>
      <w>49</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3808</x>
      <y>2324</y>
      <w>49</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2520</x>
      <y>1981</y>
      <w>49</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2310</x>
      <y>2142</y>
      <w>91</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>110.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2331</x>
      <y>2282</y>
      <w>70</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>80.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2317</x>
      <y>2324</y>
      <w>105</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2408</x>
      <y>2324</y>
      <w>63</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2681</x>
      <y>2296</y>
      <w>84</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2681</x>
      <y>2142</y>
      <w>126</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2681</x>
      <y>2282</y>
      <w>147</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2506</x>
      <y>2569</y>
      <w>49</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1708</x>
      <y>301</y>
      <w>112</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;140.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>1995</y>
      <w>147</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>2079</y>
      <w>49</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>2191</y>
      <w>119</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>150.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1729</x>
      <y>2093</y>
      <w>84</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;20.0;100.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1729</x>
      <y>2107</y>
      <w>84</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>1904</y>
      <w>259</w>
      <h>273</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;370.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>1904</y>
      <w>420</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;380.0;580.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>1988</y>
      <w>434</w>
      <h>203</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;270.0;600.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>2107</y>
      <w>427</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;110.0;590.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1729</x>
      <y>2044</y>
      <w>84</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;80.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>2240</y>
      <w>434</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;600.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>2254</y>
      <w>238</w>
      <h>329</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;450.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>959</x>
      <y>2268</y>
      <w>147</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;460.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>847</x>
      <y>2268</y>
      <w>126</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;460.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>2212</y>
      <w>441</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;20.0;610.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2555</x>
      <y>217</y>
      <w>161</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>210.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2555</x>
      <y>231</y>
      <w>161</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>210.0;310.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2142</x>
      <y>217</y>
      <w>140</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1372</x>
      <y>574</y>
      <w>448</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;620.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1386</x>
      <y>602</y>
      <w>434</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;170.0;600.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1470</x>
      <y>602</y>
      <w>350</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;350.0;480.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2086</x>
      <y>623</y>
      <w>63</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>50.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2275</x>
      <y>1442</y>
      <w>140</w>
      <h>651</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;910.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1582</x>
      <y>854</y>
      <w>553</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>770.0;30.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1414</x>
      <y>749</y>
      <w>721</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>1010.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2289</x>
      <y>1442</y>
      <w>1323</w>
      <h>588</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;1370.0;440.0;1870.0;820.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>2247</y>
      <w>441</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>10.0;10.0;610.0;350.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1029</x>
      <y>1442</y>
      <w>1260</w>
      <h>721</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extend</panel_attributes>
    <additional_attributes>1780.0;10.0;220.0;390.0;10.0;1010.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>623</y>
      <w>966</w>
      <h>1323</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;1870.0;1360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1841</x>
      <y>623</y>
      <w>609</w>
      <h>1204</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>850.0;1700.0;120.0;1180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1841</x>
      <y>623</y>
      <w>2289</w>
      <h>1183</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>3250.0;1670.0;3250.0;1480.0;10.0;1420.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2681</x>
      <y>1442</y>
      <w>952</w>
      <h>581</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>1340.0;810.0;810.0;400.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6615</x>
      <y>3157</y>
      <w>133</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
implements</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
</diagram>
